/**
 * NOTE: This class is auto generated by the swagger code generator program (1.0.12-1).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.NewSampleDbId;
import io.swagger.model.Sample;
import io.swagger.model.SampleResponse;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import javax.validation.Valid;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2018-06-04T21:50:05.517Z")

@Api(value = "samples", description = "the samples API")
public interface SamplesApi {

    @ApiOperation(value = "Add a sample", nickname = "samplesPut", notes = "Call to register the event of a sample being taken. Sample ID is assigned as a result of the operation and returned in response. ", response = NewSampleDbId.class, tags={ "Samples", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = NewSampleDbId.class) })
    @RequestMapping(value = "/samples",
        method = RequestMethod.PUT)
    ResponseEntity<NewSampleDbId> samplesPut(@ApiParam(value = ""  )  @Valid @RequestBody Sample sample);


    @ApiOperation(value = "Get Sample", nickname = "samplesSampleDbIdGet", notes = " Used to retrieve the details of a single Sample from a Sample Tracking system. <a href=\"https://test-server.brapi.org/brapi/v1/samples\"> test-server.brapi.org/brapi/v1/samples/{sampleDbId}</a>", response = SampleResponse.class, tags={ "Samples", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = SampleResponse.class) })
    @RequestMapping(value = "/samples/{sampleDbId}",
        method = RequestMethod.GET)
    ResponseEntity<SampleResponse> samplesSampleDbIdGet(@ApiParam(value = "the internal DB id for a sample",required=true) @PathVariable("sampleDbId") String sampleDbId);

}
